import telebot
import os
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from telebot.storage import StateMemoryStorage
from users_requests import get_db_connection, add_user_to_base
from settings_requests import get_user_message_to_edit, upd_user_message_to_edit, upd_user_last_request, \
    add_user_settings

from secret import tg_api

apishka = os.environ.get('TELEGRAM_API_TOKEN', tg_api)
state_storage = StateMemoryStorage()
tb = telebot.TeleBot(apishka, state_storage=state_storage)


def start(message):
    """Sends start message | –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    tb.delete_message(user_id, message_id=message.id)

    with get_db_connection() as conn:
        add_user_to_base(conn, user_id, user_name)
        add_user_settings(conn, user_id)

    sent_massage = tb.send_message(user_id,
                                   f'–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ –≤ –≥–æ—Ä–æ–¥–µ! '
                                   f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é, –Ω–∞–ø–∏—à–∏ /help')
    print(f'sent_massage is {sent_massage.id}')
    with get_db_connection() as conn:
        upd_user_message_to_edit(conn, user_id, sent_massage.id)


def help_me(message):
    """Helps user to understand how it works | –ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç—å –∫–∞–∫ –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    user_id = message.from_user.id
    with get_db_connection() as conn:
        prev_message = get_user_message_to_edit(conn, user_id)

    print(f'\tkek sent_massage is {prev_message}')
    tb.delete_message(user_id, message.message_id)
    tb.edit_message_text('–ù–∞–ø–∏—à–∏ –º–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–ª–∏ –Ω–∞–ø–∏—à–∏ "—Å–ª—É—á–∞–π–Ω–æ", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ—Å—Ç–æ',
                         chat_id=message.chat.id, message_id=prev_message)


def place(message):
    """Gets user's request for place | –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –º–µ—Å—Ç–æ"""
    user_id = message.from_user.id
    with get_db_connection() as conn:
        prev_message = get_user_message_to_edit(conn, user_id)

    tb.delete_message(user_id, message.message_id)

    with get_db_connection() as conn:
        upd_user_last_request(conn, user_id, message.text)

    if message.text == '—Å–ª—É—á–∞–π–Ω–æ' or message.text == '–°–ª—É—á–∞–π–Ω–æ':
        tb.edit_message_text('–Ω–µ, —á–µ—Ç –Ω–µ —Ö–æ—á—É –ø–æ–∫–∞', chat_id=message.chat.id, message_id=prev_message)
    else:
        tb.edit_message_text(f'–ò—â–µ–º –º–µ—Å—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {message.text}', chat_id=message.chat.id, message_id=prev_message)
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        button = KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)
        markup.add(button)
        tb.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º:", reply_markup=markup)


def user_settings(message):
    """Lets user manage their settings, view their comments and rates for places | –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω–∏—Ç—å
    –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –º–µ—Å—Ç"""
    user_id = message.from_user.id
    tb.delete_message(user_id, message.id)
    markup = InlineKeyboardMarkup()
    markup.row_width = 4
    markup.add(InlineKeyboardButton("üó∫Ô∏èWIP", callback_data="distance"),
               InlineKeyboardButton("‚≠ê", callback_data="rating"),
               InlineKeyboardButton("üí¨", callback_data="comments"))
    tb.send_message(user_id, "–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏",
                    reply_markup=markup)


def operator(call):
    """Operator for calls from inline buttons | –û–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫"""
    user_id = call.from_user.id
    if call.data == "distance":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏ –∂–µ–ª–∞–µ–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ü–∏—Ñ—Ä–æ–π –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
    if call.data == "rating":
        tb.send_message(user_id, "–í–ê–ù–ï–ß–ö–ò–ù, –î–í–ê!!!")
    if call.data == "comments":
        tb.send_message(user_id, "–ú–ê–®–ò–ù–ê –ü–û–õ–û–ñ–ò –ë–ê–ù–ö–û–ú–ê–¢!!!!")
    if call.data == "r1":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 1")
    if call.data == "c1":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 1")
    if call.data == "r2":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 2")
    if call.data == "c2":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 2")
    if call.data == "r3":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 3")
    if call.data == "c3":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 3")
    if call.data == "r4":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 4")
    if call.data == "c4":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 4")
    if call.data == "r5":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 5")
    if call.data == "c5":
        tb.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –º–µ—Å—Ç–∞ –Ω–æ–º–µ—Ä 5")
